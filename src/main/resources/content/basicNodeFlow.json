[
    {
        "id": "e3be62f1.a8031",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "25e70629.19c98a",
        "type": "Wagon",
        "z": "e3be62f1.a8031",
        "wagonname": "Wagon BMI",
        "wagondescription": "Control Resources ",
        "wagoninternalid": "",
        "wagoninternalversion": "",
        "wagonjsonpointer": "",
        "wagonstation1": "Hepatitis",
        "wagonstation2": "Cancer",
        "wagonstation3": "Diabetes",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "4a47e596.e86bfc"
            ]
        ]
    },
    {
        "id": "a4b9facc.9612f8",
        "type": "Train",
        "z": "e3be62f1.a8031",
        "trainname": "BMI Train",
        "traincreator": "jbjares",
        "trainfullname": "Joao Bosco Jares",
        "trainorganization": "Fraunhofer Institute",
        "traindoid": "",
        "trainnetcnrirepository": "",
        "traindescription": "Calculate the BMI",
        "traininternalid": "",
        "traininternalversion": "",
        "trainjsonpointer": "",
        "trainpayloadbaseurl": "webdav",
        "trainpublickey": "1234567890dvv3rvgrvrevdvdevdc===",
        "x": 100,
        "y": 320,
        "wires": [
            [
                "25e70629.19c98a"
            ]
        ]
    },
    {
        "id": "4a47e596.e86bfc",
        "type": "Resource",
        "z": "e3be62f1.a8031",
        "resourcename": "BMI Resources",
        "resourcedescription": "Assembly the BMI Resources",
        "resourceinternalid": "",
        "resourceinternalversion": "",
        "resourcejsonpointer": "",
        "createimage": "false",
        "zipartifacts": "false",
        "ociarchitecture": "",
        "ociauthor": "",
        "ociconfigcmd": "",
        "ociconfigentrypoint": "",
        "ociconfigenvlist": "",
        "ociconfigexposedports": "",
        "ociconfigvolumes": "",
        "ociuserpass": "",
        "ociuserprivatekey": "",
        "ociusertoken": "",
        "ociuseruser": "2c43508e-4ac4-4562-a13f-5e1549818761",
        "resourcetype": "DOCKER_CONTAINER",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "67fec965.1bc308",
                "31cd0394.64530c",
                "9ff8a6e2.6da4f8",
                "bf1789d2.89b8d8",
                "e26a84d9.7e2928"
            ]
        ]
    },
    {
        "id": "9ff8a6e2.6da4f8",
        "type": "Artifact",
        "z": "e3be62f1.a8031",
        "name": "requirements.txt",
        "filename": "",
        "filedata": "data:text/plain;base64,c2ltcGxlanNvbgpyZXF1ZXN0cwpwYW5kYXMKbnVtcHkK",
        "format": "utf8",
        "x": 440,
        "y": 340,
        "wires": [
            [
                "877ff1b4.7e248"
            ]
        ]
    },
    {
        "id": "67fec965.1bc308",
        "type": "Artifact",
        "z": "e3be62f1.a8031",
        "name": "Dockerfile",
        "filename": "",
        "filedata": "data:application/octet-stream;base64,RlJPTSBweXRob246My43CgpDT1BZIHJlcXVpcmVtZW50cy50eHQgL3JlcXVpcmVtZW50cy50eHQKQ09QWSBpbnB1dDIuY3FsIC9pbnB1dDIuY3FsCkNPUFkgc2NyaXB0LnB5IC9zY3JpcHQucHkKClJVTiBwaXAgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0CgpDTUQgWyJweXRob24iLCAic2NyaXB0LnB5Il0K",
        "format": "utf8",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "877ff1b4.7e248"
            ]
        ]
    },
    {
        "id": "31cd0394.64530c",
        "type": "Artifact",
        "z": "e3be62f1.a8031",
        "name": "input2.cql",
        "filename": "",
        "filedata": "data:application/octet-stream;base64,bGlicmFyeSBQaGVub3R5cGVMaWJyYXJ5IHZlcnNpb24gJzAuMC4xJyAKCnVzaW5nIEZISVIgdmVyc2lvbiAnMy4wLjAnIAoKY29kZXN5c3RlbSAiU05PTUVEIjogJ2h0dHA6Ly9zbm9tZWQuaW5mby9zY3QnIApjb2Rlc3lzdGVtICJMT0lOQyI6ICdodHRwOi8vbG9pbmMub3JnJyAKCnZhbHVlc2V0ICJXZWlnaHQiOiAndnMtd2VpZ2h0JyAKdmFsdWVzZXQgIkhlaWdodCI6ICd2cy1oZWlnaHQnIAoKY29kZSAiQ2hlc3QgcGFpbiI6ICcyOTg1NzAwOScgZnJvbSAiU05PTUVEIiBkaXNwbGF5ICdDaGVzdCBwYWluJyAKY29kZSAiV2VpZ2h0IE1lYXN1cmVkIjogJzMxNDEtOScgZnJvbSAiTE9JTkMiIGRpc3BsYXkgJ1dlaWdodCBNZWFzdXJlZCcgCmNvZGUgIkJvZHkgaGVpZ2h0IjogJzgzMDItMicgZnJvbSAiTE9JTkMiIGRpc3BsYXkgJ0JvZHkgaGVpZ2h0JyAKCmNvbnRleHQgUGF0aWVudCAKCmRlZmluZSAiSW4gRGVtb2dyYXBoaWMiOiAKICBJbmNsdXNpb25Dcml0ZXJpYSAKCmRlZmluZSBJbmNsdXNpb25Dcml0ZXJpYTogCiAgZXhpc3RzICggCiAgICAgIFtDb25kaXRpb25dIEMgCiAgICAgICAgd2hlcmUgVG9Db2RlKEMuY29kZS5jb2RpbmcpIH4gIkNoZXN0IHBhaW4iIAogICAgKSAKICBhbmQgIFRvUXVhbnRpdHkgKCAKICAgIExhc3QgKCAKICAgICAgICBbT2JzZXJ2YXRpb25dIE8gCiAgICAgICAgICB3aGVyZSBUb0NvZGUoTy5jb2RlLmNvZGluZykgfiAiV2VpZ2h0IE1lYXN1cmVkIiAKICAgICAgICAgIHNvcnQgYnkgZWZmZWN0aXZlLnZhbHVlIAogICAgICApLnZhbHVlIGFzIFF1YW50aXR5IAogICAgKS52YWx1ZSA+IDUwIAogIGFuZCAgVG9RdWFudGl0eSAoIAogICAgTGFzdCAoIAogICAgICAgIFtPYnNlcnZhdGlvbl0gTyAKICAgICAgICAgIHdoZXJlIFRvQ29kZShPLmNvZGUuY29kaW5nKSB+ICJCb2R5IGhlaWdodCIgCiAgICAgICAgICBzb3J0IGJ5IGVmZmVjdGl2ZS52YWx1ZSAKICAgICAgKS52YWx1ZSBhcyBRdWFudGl0eSAKICAgICkudmFsdWUgPiA0NSAKICAKZGVmaW5lIFdlaWdodHM6IAogIExhc3QgKCAKICAgIFtPYnNlcnZhdGlvbjogIldlaWdodCJdIE8gCiAgICAgIHNvcnQgYnkgZWZmZWN0aXZlLnZhbHVlCiAgKSAKCmRlZmluZSBIZWlnaHRzOiAKICBMYXN0ICggCiAgICBbT2JzZXJ2YXRpb246ICJIZWlnaHQiXSBPIAogICAgICBzb3J0IGJ5IGVmZmVjdGl2ZS52YWx1ZQogICkgCgpkZWZpbmUgZnVuY3Rpb24gVG9Db2RlKGNvZGluZyBGSElSLkNvZGluZyk6IAogIFN5c3RlbS5Db2RlIHsgCiAgICBjb2RlOiBjb2RpbmcuY29kZS52YWx1ZSwgCiAgICBzeXN0ZW06IGNvZGluZy5zeXN0ZW0udmFsdWUsIAogICAgdmVyc2lvbjogY29kaW5nLnZlcnNpb24udmFsdWUsIAogICAgZGlzcGxheTogY29kaW5nLmRpc3BsYXkudmFsdWUgCiAgfSAKCmRlZmluZSBmdW5jdGlvbiBUb1F1YW50aXR5KHF1YW50aXR5IEZISVIuUXVhbnRpdHkpOiAKICBTeXN0ZW0uUXVhbnRpdHkgeyB2YWx1ZTogcXVhbnRpdHkudmFsdWUudmFsdWUsIHVuaXQ6IHF1YW50aXR5LnVuaXQudmFsdWUgfSAK",
        "format": "utf8",
        "x": 420,
        "y": 260,
        "wires": [
            [
                "877ff1b4.7e248"
            ]
        ]
    },
    {
        "id": "bf1789d2.89b8d8",
        "type": "Artifact",
        "z": "e3be62f1.a8031",
        "name": "build.sh",
        "filename": "",
        "filedata": "data:text/x-sh;base64,IyEvYmluL2Jhc2gKZG9ja2VyIHJtaSBqYmphcmVzL3BodG9uZmhpcgpkb2NrZXIgYnVpbGQgLXQgamJqYXJlcy9waHRvbmZoaXIgLi8KCmRvY2tlciBwdXNoIGpiamFyZXMvcGh0b25maGlyCg==",
        "format": "utf8",
        "x": 420,
        "y": 420,
        "wires": [
            [
                "877ff1b4.7e248"
            ]
        ]
    },
    {
        "id": "e26a84d9.7e2928",
        "type": "Artifact",
        "z": "e3be62f1.a8031",
        "name": "script.py",
        "filename": "",
        "filedata": "data:text/x-python-script;base64,",
        "format": "utf8",
        "x": 420,
        "y": 500,
        "wires": [
            [
                "877ff1b4.7e248"
            ]
        ]
    },
    {
        "id": "877ff1b4.7e248",
        "type": "Dispatcher",
        "z": "e3be62f1.a8031",
        "dispatchername": "Dispatcher",
        "dispatcherdescription": "Dispatcher Description",
        "dispatcherinternalid": "2c43508e-4ac4-4562-a13f-5e1549818761",
        "dispatcherinternalversion": "",
        "dispatcherjsonpointer": "",
        "x": 670,
        "y": 340,
        "wires": [
            [
                "afe15396.38475"
            ]
        ]
    },
    {
        "id": "afe15396.38475",
        "type": "debug",
        "z": "e3be62f1.a8031",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "trainMessageObj",
        "targetType": "msg",
        "x": 730,
        "y": 440,
        "wires": []
    }
]